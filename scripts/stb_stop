#!/usr/bin/expect

################################################################################
# Stops STB boot up (run while STB starting up)
# 
# Usage           : ./stop_stb <STB_IP_ADDRESS> "[Kill Command]"
# Example         : tnet 192.168.1.202 "killall -9 stb_run"
#
################################################################################

if {$argc > 2} {
 puts "Usage: stb_stop <ip address> \[kill command\]"
 puts "Ex: stb_stop:"
 puts "Ex: stb_stop 192.168.1.104 "
 puts "Ex: stb_stop 192.168.1.104  \"kill -USR2 1\""
 puts "Ex: stb_stop 192.168.1.24 \"kill -USR2 1\""
 exit
}

log_user 0
set timeout 2

#set ip "192.168.1.24"
set ip [exec get_default_stb.py -i]
set cmd "killall miniwatchdog ; kill -USR2 1"

if {$argc > 0} {
set ip [lindex $argv 0]
}
if {$argc > 1} {
set cmd [lindex $argv 1]
}

set prompt "~ #"

puts "stop stb $ip"
puts "  send cmd: $cmd"

for {set x 0} {$x<120} {incr x} {
 # Open a telnet session to a remote server, and wait for a username prompt.
 spawn telnet $ip

 # Expect a timeout and then retry again.
 expect {
         timeout    {log_user 1; puts "Try Again..."; log_user 0; continue;}
 	 "login:"   {send "root\r"; expect $prompt; send \r; break}
 }
}
expect $prompt
send $cmd
expect $prompt

interact
